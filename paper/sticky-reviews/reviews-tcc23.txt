Review #118A
===========================================================================
 
Paper summary
-------------
The paper introduces the concept of Ad-Hoc Broadcast, Trace and Revoke. In such a system, N parties can generate their own secret- public key pair independently and one can broadcast to these N parties. If it is possible to break semantic security and recover information about a plaintext from a ciphertext, then one can trace a party that is the traitor. It is also possible to revoke parties. 
 
The contribution is to 
1) come up with the concept and definitions;
2) come up with a construction with constant size ciphertexts but decryption time linear in N
(based on falsifiable assumptions);
3) generalize this construction to get richer tradeoffs ciphertext size decryption time;
4) show that these tradeoffs are "optimal" by getting a lower bound of the product of the ciphertext size and the decryption time.
 
Recommendation
--------------
4. Lean toward acceptance, but it wouldn't be terrible if it got rejected
 
Suitability
-----------
3. Fits the conference
 
Detailed Review
---------------
Strong Points
1) The lower bound is interesting, as it shows how much we can expect to compress the ciphertext if we want the broadcast fuctionality. Maybe it would be worth to see if it can apply to other contexts (I can think for example, of the related concept of Ad-hoc Threshold Broadcast encryption). The lower bounds are non-trivial to prove.
2) The paper seems technically very solid. 
3) The new notion of AH-BTR is quite natural.
4) The result achieved (AH-BTR with ciphertexts o(N)) is "unexpected", i.e. a priori it seems hard to achieve. 
 
Weak Points
1) The weakest point is that the construction based on falsifiable assumptions uses very strong tools (although they can all be based on falsifiable assumptions). 
2) The lower bound might not be very meaningful for small N. 
These two weak points mean that the paper does not seem to advance much on the practical front or point to new ways to achieve this construction without very expensive tools. The results will interest a very specialized audience.
 
 
Summary 
 
This paper looks like a solid contribution to the theoretical understanding of Ad-hoc broadcast encryption, so I lean towards acceptance.
 
 
 
 
 
 
Detailed Technical Comments
 
I wonder to which extent it is fair to say that the AH-PLBE has constant size ciphertexts ignoring the log N factor (the argument is that since the ciphertext is poly(\lambda,log N) and N \leq 2^{\lambda}, the ciphertext is poly(\lambda)).
 
Editorial feedback
------------------
The paper is generally very well written but I could use more intuition on the general construction, and some explanations I found a bit redundant and others missing. 
 
At a certain point I could not follow completely. 
 
Here are a few examples: 
 
1. I wonder why do you need to give the full definition and then the two equivalent smaller ones. I think it is not particularly informative and I would have been as convinced with the two equivalent definitions and it saves energy and effort from the reader for the rest. 
2. In the intro, you use N before you say what it is. 
3. A bit more intuition of why is Private Linear Broadcast Encryption defined on this way would be useful, and some comment on why you don't need mode indistinguishability also. The cut-off message appears in the construction but not in the syntactic definition.
4. It would help me to get a more detailed explanation/intuition of how Theorem 14 implies the lower bound.
 
Confidence level
----------------
2. Medium: quite confident but I could not check many of the details
 
 
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
 
 
Review #118B
===========================================================================
 
Paper summary
-------------
The paper considers an ad hoc version of traitor tracing schemes where there is no centralized party, and parties can be added or removed without interaction. In more detail, a traitor tracing scheme allows all users of the scheme to decrypt, using their own secret key, ciphertexts generated using a single public key. If one of the secret keys was used to construct a "pirate" decoder, then the identity of the user that provided the key can be determined by a tracing algorithm. 
 
The paper constructs ad hoc traitor tracing schemes from a combination of assumptions, each implied by public key function encryption for general circuits satisfying additional properties ( obfuscation minimum PKFE). The public key of the constructed scheme grows with the number of users N; with the size of the ciphertext and decryption time such that their product is O(N).
 
The paper also argues that the tradeoff between decryption time and ciphertext size is optimal.
 
Recommendation
--------------
4. Lean toward acceptance, but it wouldn't be terrible if it got rejected
 
Suitability
-----------
3. Fits the conference
 
Detailed Review
---------------
The paper first formalizes the ad hoc notion of a traitor tracing scheme, extending existing definitions. They then show that the "traceability" property in the definition can be composed into two properties such that the definitions are equivalent. The main advantage of the decomposed variant is that the security games in the two properties are non-interactive. 
 
For the construction, the paper follows the paradigm of constructing an ad hoc version of an intermediate primitive - private linear broadcast encryption (PBLE). The primitive has an ordering of users such that an encryptor can specify an index during encryption such that only users with keys for indices larger than the specified encryption index will be able to decrypt. The cut-off index needs to be private in such a scheme. The transformation from this scheme to traitor tracing is fairly standard from prior work, with efficiency properties carrying over from one scheme to the other. 
 
It should be noted that one naively can construct an ad hoc PBLE from any public key encryption scheme with public key size O(N), ciphertext size O(N) and decryption time O(1). This is done by the encryptor computing a separate ciphertext corresponding to each public key, and only encrypting the (same) message if the index is higher than the "cut-off" index. The downside of the naive construction is that one cannot tradeoff between ciphertext size and decryption time. As a first step, the construction trades off decryption time with ciphertext size, achieving a construction with constant ciphertext size, but O(N) decryption time. Then it applies the naive protocol by grouping to obtain a scheme where the |ct|*T_decrypt = O(N). 
 
The core idea in achieving a construction with constant ciphertext size is to compress the naive construction (containing N ciphertexts) to one that only outputs the relevant ciphertext to be decrypted. Specifically, the ciphertext is an obfuscated program that on input i only outputs the ciphertext for the user i. But since the size of the obfuscated program must be independent of N, this is done by having the obfuscated program output a garbled circuit which will in turn produce the ciphertext for user i. In order to evaluate the garbled circuit, the obfuscated program also outputs the labels for a laconic OT, thus avoiding obfuscation circuit dependence on N. The proof of the obfuscated program utilizes standard "puncturing" ideas. The decryption takes O(N) time since the laconic OT is computed with respect to a hash of N public keys which must be recomputed before decryption can be performed. 
 
 
I found the paper easy to read, and the main ideas were presented clearly. I don't know if there is sufficient justification for the strong assumptions, to achieve a solution whose only advantage over the naive solution is a (variable) tradeoff between ciphertext size and decryption time. As a consequence, I'm mostly neural on this paper.
 
Things to address during rebuttal
---------------------------------
- In prior definitions the trace algorithm outputs a "traitor set" as opposed to a single traitor. It seems like the construction in the paper would also allow for multiple indices to be output. Is that the case? If so, is the definition for the trace algorithm written as such so that the decomposition into the two properties works out?
- Given that the parameters of the scheme are so close to the naive ad hoc construction, would it be possible to compress the public key (to be independent of N) such that the key can be publicly/verifiably updated non-interactively for parties choosing to join/leave? This isn't quite compatible with the use of laconic OT in the current construction, but may provide a justification for using stronger assumptions.
 
Confidence level
----------------
2. Medium: quite confident but I could not check many of the details
 
 
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
 
 
Review #118C
===========================================================================
 
Paper summary
-------------
This paper introduces a new cryptographic primitive which the author calls ad hoc broadcast, trace, and revoke (AH-BTR). In the primitive, anyone can generate a pair of public key and secret key and messages are encrypted under any list of public keys in such a way that a decryptor can decrypt it if he knows a secret key corresponding to one of the public keys in the list. The security notion requires traceability, that is, given a (stateless) decoder that can break the IND security under a certain list of public keys, one can detect at least one user of which secret key is used to construct the decoder. There is a trivial construction of AH-BTR by simply parallelly running many instances of PKE, so it becomes non-trivial only if we put some efficiency requirements. In this paper, the author first constructs an AH-BTR scheme with constant-size ciphertexts based on indistinguishability obfuscation (or indeed, compact functional encryption which is slightly weaker). On the other hand the decryption time of the scheme is O(N) where N is the number of recipients. To complement it, the author gives a variant that achieves a tradeoff between the ciphertext size and decryption time: For any constant \gamma, there is a construction with ciphertext size O(N^{1-\gamma}) and decryption time O(N^\gamma). Finally, the author shows that this tradeoff is optimal, that is, the produce of the ciphertext size and decryption time must be \Omega(N) even for broadcast encryption with very weak security.
 
Recommendation
--------------
4. Lean toward acceptance, but it wouldn't be terrible if it got rejected
 
Suitability
-----------
3. Fits the conference
 
Detailed Review
---------------
1. A nice thing about the paper is that it introduces an interesting new concept of AH-BTR. The results presented in the paper are complete as they show a tradeoff between the ciphertext length and decryption time that is shown to be optimal. I find it unexpected and interesting to use the technique developed in the context of random oracles with auxiliary inputs to show a lower bound for the tradeoff. The paper is very well-written and easy to follow. 
 
2. The weakness of the paper may be lack of significantly new techniques. The main idea of the construction is to obfuscate an encryption circuit where laconic OT is used to optimize the ciphertext length. Though this is non-trivial, this construction seems very natural at least in hindsight. The construction for achieving the optimal tradeoff seems to be also similar to existing constructions in [64]. In addition, it's also a little bit disappointing that the author only provides constructions in obfustopia. Giving (non-trivial) constructions based on standard assumptions bilinear pairings or lattices would make the paper much stronger.
 
3. I recommend acceptance of this submission if there's enough room.
 
Editorial feedback
------------------
In some security definitions (e.g., Definition 2), it is not explicitly stated that the adversary must be efficient. Also, the requirement of computational indistinguishability of two experiments (Exp_GC^0 and Exp_GC^1 in the case of Definition 2) looks a little bit weird (though I believe this is mathematically correct). These experiments are defined to output 1-bit b' that is output by A. But for 1-bit random variables computational indistinguishability is equivalent to statistical indistinguishability (both just mean that the probabilities of taking 1 are negligibly close).
 
Confidence level
----------------
3. Good: I know the area and I studied the paper in sufficient detail
